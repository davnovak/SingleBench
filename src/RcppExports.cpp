// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pSmoothSingleIter
NumericMatrix pSmoothSingleIter(NumericMatrix exprs, NumericMatrix idcs, NumericMatrix weights, const double phi1, const double phi2, const double lambda, std::vector<int> segs, const size_t k);
RcppExport SEXP _SingleBench_pSmoothSingleIter(SEXP exprsSEXP, SEXP idcsSEXP, SEXP weightsSEXP, SEXP phi1SEXP, SEXP phi2SEXP, SEXP lambdaSEXP, SEXP segsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type exprs(exprsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type idcs(idcsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const double >::type phi1(phi1SEXP);
    Rcpp::traits::input_parameter< const double >::type phi2(phi2SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type segs(segsSEXP);
    Rcpp::traits::input_parameter< const size_t >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(pSmoothSingleIter(exprs, idcs, weights, phi1, phi2, lambda, segs, k));
    return rcpp_result_gen;
END_RCPP
}
// CollapsedCorankingMatrix
NumericMatrix CollapsedCorankingMatrix(NumericMatrix idcs1, NumericMatrix idcs2);
RcppExport SEXP _SingleBench_CollapsedCorankingMatrix(SEXP idcs1SEXP, SEXP idcs2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type idcs1(idcs1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type idcs2(idcs2SEXP);
    rcpp_result_gen = Rcpp::wrap(CollapsedCorankingMatrix(idcs1, idcs2));
    return rcpp_result_gen;
END_RCPP
}
// denoise_matrix
NumericMatrix denoise_matrix(NumericMatrix coords, NumericMatrix kNN_idcs, int K, int n_iter);
RcppExport SEXP _SingleBench_denoise_matrix(SEXP coordsSEXP, SEXP kNN_idcsSEXP, SEXP KSEXP, SEXP n_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type kNN_idcs(kNN_idcsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(denoise_matrix(coords, kNN_idcs, K, n_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SingleBench_pSmoothSingleIter", (DL_FUNC) &_SingleBench_pSmoothSingleIter, 8},
    {"_SingleBench_CollapsedCorankingMatrix", (DL_FUNC) &_SingleBench_CollapsedCorankingMatrix, 2},
    {"_SingleBench_denoise_matrix", (DL_FUNC) &_SingleBench_denoise_matrix, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_SingleBench(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
